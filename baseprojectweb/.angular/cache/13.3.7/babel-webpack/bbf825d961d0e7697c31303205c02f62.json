{"ast":null,"code":"import * as Highcharts from 'highcharts';\nimport { AsyncSubject } from 'rxjs';\nimport * as i0 from '@angular/core';\nimport { Directive, Input, InjectionToken, Injectable, Inject, NgModule } from '@angular/core';\nimport * as Highmaps from 'highcharts/highmaps';\nimport * as Highstock from 'highcharts/highstock';\nimport * as Highcharts$1 from 'highcharts/highcharts-gantt';\n\nclass Chart {\n  constructor(options = {\n    series: []\n  }) {\n    this.options = options;\n    this.refSubject = new AsyncSubject();\n    this.ref$ = this.refSubject.asObservable();\n  }\n  /**\n   * Add Point\n   * @param point         Highcharts.DataPoint, number touple or number\n   * @param serieIndex    Index position of series. This defaults to 0.\n   * @param redraw        Flag whether or not to redraw point. This defaults to true.\n   * @param shift         Shift point to the start of series. This defaults to false.\n   */\n\n\n  addPoint(point, serieIndex = 0, redraw = true, shift = false) {\n    this.ref$.subscribe(chart => {\n      if (chart.series.length > serieIndex) {\n        chart.series[serieIndex].addPoint(point, redraw, shift);\n      }\n    });\n  }\n  /**\n   * Add Series\n   * @param series        Series Configuration\n   * @param redraw        Flag whether or not to redraw series. This defaults to true.\n   * @param animation     Whether to apply animation, and optionally animation configuration. This defaults to false.\n   */\n\n\n  addSeries(series, redraw = true, animation) {\n    this.ref$.subscribe(chart => {\n      chart.addSeries(series, redraw, animation);\n    });\n  }\n  /**\n   * Remove Point\n   * @param pointIndex    Index of Point\n   * @param serieIndex    Specified Index of Series. Defaults to 0.\n   */\n\n\n  removePoint(pointIndex, serieIndex = 0) {\n    this.ref$.subscribe(chart => {\n      if (chart.series.length > serieIndex && chart.series[serieIndex].data.length > pointIndex) {\n        chart.series[serieIndex].removePoint(pointIndex, true);\n      }\n    });\n  }\n  /**\n   * Remove Series\n   * @param seriesIndex    Index position of series to remove.\n   */\n\n\n  removeSeries(seriesIndex) {\n    this.ref$.subscribe(chart => {\n      if (chart.series.length > seriesIndex) {\n        chart.series[seriesIndex].remove(true);\n      }\n    });\n  }\n\n  init(el) {\n    if (!this.ref) {\n      Highcharts.chart(el.nativeElement, this.options, chart => {\n        if (!this.ref) {\n          // TODO: workaround for doubled callbacks on exporting charts: issue #238\n          this.refSubject.next(chart);\n          this.ref = chart;\n          this.refSubject.complete();\n        }\n      });\n    }\n  }\n\n  destroy() {\n    if (this.ref) {\n      this.options = this.ref.options;\n      this.ref.destroy();\n      this.ref = undefined; // new init subject\n\n      this.refSubject = new AsyncSubject();\n      this.ref$ = this.refSubject.asObservable();\n    }\n  }\n\n} // import * as Highcharts from 'highcharts';\n\n/**\n * @license\n * Copyright Felix Itzenplitz. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at\n * https://github.com/cebor/angular-highcharts/blob/master/LICENSE\n */\n\n\nclass MapChart {\n  constructor(options = {\n    series: []\n  }) {\n    this.options = options;\n    this.refSubject = new AsyncSubject();\n    this.ref$ = this.refSubject.asObservable();\n  }\n\n  init(el) {\n    if (!this.ref) {\n      Highmaps.mapChart(el.nativeElement, this.options, chart => {\n        if (!this.ref) {\n          // TODO: workaround for doubled callbacks on exporting charts: issue #238\n          this.refSubject.next(chart);\n          this.ref = chart;\n          this.refSubject.complete();\n        }\n      });\n    }\n  }\n\n  destroy() {\n    if (this.ref) {\n      this.options = this.ref.options;\n      this.ref.destroy();\n      this.ref = undefined; // new init subject\n\n      this.refSubject = new AsyncSubject();\n      this.ref$ = this.refSubject.asObservable();\n    }\n  }\n\n} //import * as Highcharts from 'highcharts';\n\n/**\n * @license\n * Copyright Felix Itzenplitz. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at\n * https://github.com/cebor/angular-highcharts/blob/master/LICENSE\n *\n * @author Felix Itzenplitz\n * @author Timothy A. Perez (contributor)\n */\n\n\nclass StockChart {\n  constructor(options = {\n    series: []\n  }) {\n    this.options = options;\n    this.refSubject = new AsyncSubject();\n    this.ref$ = this.refSubject.asObservable();\n  }\n\n  init(el) {\n    if (!this.ref) {\n      Highstock.stockChart(el.nativeElement, this.options, chart => {\n        if (!this.ref) {\n          // TODO: workaround for doubled callbacks on exporting charts: issue #238\n          this.refSubject.next(chart);\n          this.ref = chart;\n          this.refSubject.complete();\n        }\n      });\n    }\n  }\n\n  destroy() {\n    if (this.ref) {\n      this.options = this.ref.options;\n      this.ref.destroy();\n      this.ref = undefined; // new init subject\n\n      this.refSubject = new AsyncSubject();\n      this.ref$ = this.refSubject.asObservable();\n    }\n  }\n\n}\n/**\n * @license\n * Copyright Felix Itzenplitz. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at\n * https://github.com/cebor/angular-highcharts/blob/master/LICENSE\n */\n\n\nclass HighchartsGantt {\n  constructor(options = {\n    series: []\n  }) {\n    this.options = options;\n    this.refSubject = new AsyncSubject();\n    this.ref$ = this.refSubject.asObservable();\n  }\n\n  init(el) {\n    if (!this.ref) {\n      Highcharts$1.ganttChart(el.nativeElement, this.options, chart => {\n        if (!this.ref) {\n          // TODO: workaround for doubled callbacks on exporting charts: issue #238\n          this.refSubject.next(chart);\n          this.ref = chart;\n          this.refSubject.complete();\n        }\n      });\n    }\n  }\n\n  destroy() {\n    if (this.ref) {\n      this.options = this.ref.options;\n      this.ref.destroy();\n      this.ref = undefined; // new init subject\n\n      this.refSubject = new AsyncSubject();\n      this.ref$ = this.refSubject.asObservable();\n    }\n  }\n\n}\n/**\n * @license\n * Copyright Felix Itzenplitz. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at\n * https://github.com/cebor/angular-highcharts/blob/master/LICENSE\n */\n\n\nclass ChartDirective {\n  constructor(el) {\n    this.el = el;\n  }\n\n  ngOnChanges(changes) {\n    if (!changes.chart.isFirstChange()) {\n      this.destroy();\n      this.init();\n    }\n  }\n\n  ngOnInit() {\n    this.init();\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  init() {\n    if (this.chart instanceof Chart || this.chart instanceof StockChart || this.chart instanceof MapChart || this.chart instanceof HighchartsGantt) {\n      this.chart.init(this.el);\n    }\n  }\n\n  destroy() {\n    if (this.chart instanceof Chart || this.chart instanceof StockChart || this.chart instanceof MapChart || this.chart instanceof HighchartsGantt) {\n      this.chart.destroy();\n    }\n  }\n\n}\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nChartDirective.ɵfac = function ChartDirective_Factory(t) {\n  return new (t || ChartDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nChartDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ChartDirective,\n  selectors: [[\"\", \"chart\", \"\"]],\n  inputs: {\n    chart: \"chart\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[chart]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    chart: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Felix Itzenplitz. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at\n * https://github.com/cebor/angular-highcharts/blob/master/LICENSE\n */\n\n\nlet HIGHCHARTS_MODULES = new InjectionToken('HighchartsModules');\n\nclass ChartService {\n  constructor(chartModules) {\n    this.chartModules = chartModules;\n  }\n\n  initModules() {\n    this.chartModules.forEach(chartModule => {\n      [Highcharts, Highstock, Highmaps, Highcharts$1].forEach(chartModule);\n    });\n  }\n\n}\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nChartService.ɵfac = function ChartService_Factory(t) {\n  return new (t || ChartService)(i0.ɵɵinject(HIGHCHARTS_MODULES));\n};\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nChartService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ChartService,\n  factory: ChartService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [HIGHCHARTS_MODULES]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Felix Itzenplitz. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at\n * https://github.com/cebor/angular-highcharts/blob/master/LICENSE\n */\n\n\nclass ChartModule {\n  constructor(cs) {\n    this.cs = cs;\n    this.cs.initModules();\n  }\n\n}\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nChartModule.ɵfac = function ChartModule_Factory(t) {\n  return new (t || ChartModule)(i0.ɵɵinject(ChartService));\n};\n/** @nocollapse */\n\n/** @nocollapse */\n\n\nChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ChartModule\n});\n/** @nocollapse */\n\n/** @nocollapse */\n\nChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: HIGHCHARTS_MODULES,\n    useValue: []\n  }, ChartService]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartModule, [{\n    type: NgModule,\n    args: [{\n      exports: [ChartDirective],\n      declarations: [ChartDirective],\n      providers: [{\n        provide: HIGHCHARTS_MODULES,\n        useValue: []\n      }, ChartService]\n    }]\n  }], function () {\n    return [{\n      type: ChartService\n    }];\n  }, null);\n})();\n/*\n * Public API Surface of angular-highcharts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Chart, ChartDirective, ChartModule, HIGHCHARTS_MODULES, HighchartsGantt, MapChart, StockChart };","map":{"version":3,"names":["Highcharts","AsyncSubject","i0","Directive","Input","InjectionToken","Injectable","Inject","NgModule","Highmaps","Highstock","Highcharts$1","Chart","constructor","options","series","refSubject","ref$","asObservable","addPoint","point","serieIndex","redraw","shift","subscribe","chart","length","addSeries","animation","removePoint","pointIndex","data","removeSeries","seriesIndex","remove","init","el","ref","nativeElement","next","complete","destroy","undefined","MapChart","mapChart","StockChart","stockChart","HighchartsGantt","ganttChart","ChartDirective","ngOnChanges","changes","isFirstChange","ngOnInit","ngOnDestroy","ɵfac","ElementRef","ɵdir","type","args","selector","HIGHCHARTS_MODULES","ChartService","chartModules","initModules","forEach","chartModule","ɵprov","decorators","ChartModule","cs","ɵmod","ɵinj","provide","useValue","exports","declarations","providers"],"sources":["C:/joshua/projetos/microservices/baseprojectpackage/baseprojectweb/node_modules/angular-highcharts/fesm2015/angular-highcharts.mjs"],"sourcesContent":["import * as Highcharts from 'highcharts';\nimport { AsyncSubject } from 'rxjs';\nimport * as i0 from '@angular/core';\nimport { Directive, Input, InjectionToken, Injectable, Inject, NgModule } from '@angular/core';\nimport * as Highmaps from 'highcharts/highmaps';\nimport * as Highstock from 'highcharts/highstock';\nimport * as Highcharts$1 from 'highcharts/highcharts-gantt';\n\nclass Chart {\n    constructor(options = { series: [] }) {\n        this.options = options;\n        this.refSubject = new AsyncSubject();\n        this.ref$ = this.refSubject.asObservable();\n    }\n    /**\n     * Add Point\n     * @param point         Highcharts.DataPoint, number touple or number\n     * @param serieIndex    Index position of series. This defaults to 0.\n     * @param redraw        Flag whether or not to redraw point. This defaults to true.\n     * @param shift         Shift point to the start of series. This defaults to false.\n     */\n    addPoint(point, serieIndex = 0, redraw = true, shift = false) {\n        this.ref$.subscribe(chart => {\n            if (chart.series.length > serieIndex) {\n                chart.series[serieIndex].addPoint(point, redraw, shift);\n            }\n        });\n    }\n    /**\n     * Add Series\n     * @param series        Series Configuration\n     * @param redraw        Flag whether or not to redraw series. This defaults to true.\n     * @param animation     Whether to apply animation, and optionally animation configuration. This defaults to false.\n     */\n    addSeries(series, redraw = true, animation) {\n        this.ref$.subscribe(chart => {\n            chart.addSeries(series, redraw, animation);\n        });\n    }\n    /**\n     * Remove Point\n     * @param pointIndex    Index of Point\n     * @param serieIndex    Specified Index of Series. Defaults to 0.\n     */\n    removePoint(pointIndex, serieIndex = 0) {\n        this.ref$.subscribe(chart => {\n            if (chart.series.length > serieIndex && chart.series[serieIndex].data.length > pointIndex) {\n                chart.series[serieIndex].removePoint(pointIndex, true);\n            }\n        });\n    }\n    /**\n     * Remove Series\n     * @param seriesIndex    Index position of series to remove.\n     */\n    removeSeries(seriesIndex) {\n        this.ref$.subscribe(chart => {\n            if (chart.series.length > seriesIndex) {\n                chart.series[seriesIndex].remove(true);\n            }\n        });\n    }\n    init(el) {\n        if (!this.ref) {\n            Highcharts.chart(el.nativeElement, this.options, chart => {\n                if (!this.ref) { // TODO: workaround for doubled callbacks on exporting charts: issue #238\n                    this.refSubject.next(chart);\n                    this.ref = chart;\n                    this.refSubject.complete();\n                }\n            });\n        }\n    }\n    destroy() {\n        if (this.ref) {\n            this.options = this.ref.options;\n            this.ref.destroy();\n            this.ref = undefined;\n            // new init subject\n            this.refSubject = new AsyncSubject();\n            this.ref$ = this.refSubject.asObservable();\n        }\n    }\n}\n\n// import * as Highcharts from 'highcharts';\n/**\n * @license\n * Copyright Felix Itzenplitz. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at\n * https://github.com/cebor/angular-highcharts/blob/master/LICENSE\n */\nclass MapChart {\n    constructor(options = { series: [] }) {\n        this.options = options;\n        this.refSubject = new AsyncSubject();\n        this.ref$ = this.refSubject.asObservable();\n    }\n    init(el) {\n        if (!this.ref) {\n            Highmaps.mapChart(el.nativeElement, this.options, chart => {\n                if (!this.ref) { // TODO: workaround for doubled callbacks on exporting charts: issue #238\n                    this.refSubject.next(chart);\n                    this.ref = chart;\n                    this.refSubject.complete();\n                }\n            });\n        }\n    }\n    destroy() {\n        if (this.ref) {\n            this.options = this.ref.options;\n            this.ref.destroy();\n            this.ref = undefined;\n            // new init subject\n            this.refSubject = new AsyncSubject();\n            this.ref$ = this.refSubject.asObservable();\n        }\n    }\n}\n\n//import * as Highcharts from 'highcharts';\n/**\n * @license\n * Copyright Felix Itzenplitz. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at\n * https://github.com/cebor/angular-highcharts/blob/master/LICENSE\n *\n * @author Felix Itzenplitz\n * @author Timothy A. Perez (contributor)\n */\nclass StockChart {\n    constructor(options = { series: [] }) {\n        this.options = options;\n        this.refSubject = new AsyncSubject();\n        this.ref$ = this.refSubject.asObservable();\n    }\n    init(el) {\n        if (!this.ref) {\n            Highstock.stockChart(el.nativeElement, this.options, chart => {\n                if (!this.ref) { // TODO: workaround for doubled callbacks on exporting charts: issue #238\n                    this.refSubject.next(chart);\n                    this.ref = chart;\n                    this.refSubject.complete();\n                }\n            });\n        }\n    }\n    destroy() {\n        if (this.ref) {\n            this.options = this.ref.options;\n            this.ref.destroy();\n            this.ref = undefined;\n            // new init subject\n            this.refSubject = new AsyncSubject();\n            this.ref$ = this.refSubject.asObservable();\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Felix Itzenplitz. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at\n * https://github.com/cebor/angular-highcharts/blob/master/LICENSE\n */\nclass HighchartsGantt {\n    constructor(options = { series: [] }) {\n        this.options = options;\n        this.refSubject = new AsyncSubject();\n        this.ref$ = this.refSubject.asObservable();\n    }\n    init(el) {\n        if (!this.ref) {\n            Highcharts$1.ganttChart(el.nativeElement, this.options, chart => {\n                if (!this.ref) { // TODO: workaround for doubled callbacks on exporting charts: issue #238\n                    this.refSubject.next(chart);\n                    this.ref = chart;\n                    this.refSubject.complete();\n                }\n            });\n        }\n    }\n    destroy() {\n        if (this.ref) {\n            this.options = this.ref.options;\n            this.ref.destroy();\n            this.ref = undefined;\n            // new init subject\n            this.refSubject = new AsyncSubject();\n            this.ref$ = this.refSubject.asObservable();\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Felix Itzenplitz. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at\n * https://github.com/cebor/angular-highcharts/blob/master/LICENSE\n */\nclass ChartDirective {\n    constructor(el) {\n        this.el = el;\n    }\n    ngOnChanges(changes) {\n        if (!changes.chart.isFirstChange()) {\n            this.destroy();\n            this.init();\n        }\n    }\n    ngOnInit() {\n        this.init();\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    init() {\n        if (this.chart instanceof Chart || this.chart instanceof StockChart || this.chart instanceof MapChart\n            || this.chart instanceof HighchartsGantt) {\n            this.chart.init(this.el);\n        }\n    }\n    destroy() {\n        if (this.chart instanceof Chart || this.chart instanceof StockChart || this.chart instanceof MapChart\n            || this.chart instanceof HighchartsGantt) {\n            this.chart.destroy();\n        }\n    }\n}\n/** @nocollapse */ /** @nocollapse */ ChartDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ /** @nocollapse */ ChartDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: ChartDirective, selector: \"[chart]\", inputs: { chart: \"chart\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[chart]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { chart: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Felix Itzenplitz. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at\n * https://github.com/cebor/angular-highcharts/blob/master/LICENSE\n */\nlet HIGHCHARTS_MODULES = new InjectionToken('HighchartsModules');\nclass ChartService {\n    constructor(chartModules) {\n        this.chartModules = chartModules;\n    }\n    initModules() {\n        this.chartModules.forEach(chartModule => {\n            [Highcharts, Highstock, Highmaps, Highcharts$1].forEach(chartModule);\n        });\n    }\n}\n/** @nocollapse */ /** @nocollapse */ ChartService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartService, deps: [{ token: HIGHCHARTS_MODULES }], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ /** @nocollapse */ ChartService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [HIGHCHARTS_MODULES]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Felix Itzenplitz. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at\n * https://github.com/cebor/angular-highcharts/blob/master/LICENSE\n */\nclass ChartModule {\n    constructor(cs) {\n        this.cs = cs;\n        this.cs.initModules();\n    }\n}\n/** @nocollapse */ /** @nocollapse */ ChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartModule, deps: [{ token: ChartService }], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ /** @nocollapse */ ChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartModule, declarations: [ChartDirective], exports: [ChartDirective] });\n/** @nocollapse */ /** @nocollapse */ ChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartModule, providers: [\n        { provide: HIGHCHARTS_MODULES, useValue: [] },\n        ChartService\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [ChartDirective],\n                    declarations: [ChartDirective],\n                    providers: [\n                        { provide: HIGHCHARTS_MODULES, useValue: [] },\n                        ChartService\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: ChartService }]; } });\n\n/*\n * Public API Surface of angular-highcharts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Chart, ChartDirective, ChartModule, HIGHCHARTS_MODULES, HighchartsGantt, MapChart, StockChart };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}